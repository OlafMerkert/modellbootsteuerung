* Modellbootfernsteuerung
mit dem Computer

** DONE Kontrolliere beliebige Modellfahrzeuge
mit beliebig vielen Kanälen.  Als Beispiel gibt es ein Modellboot mit
Ruder und Gas, also zwei Kanälen.

** TODO Programmiere den ESC
für den Motor, durch speziell getimte Ausschläge des Gaskanals

** TODO Vibration/Force Feedback

* Datenprotokoll
Die Steuerungsdaten werden über eine Funkverbindung an dem
Microcontroller im Boot übertragen.  Am Computer werden die Daten in
eine serielle Schnittstelle geschrieben.

** Frame
Jeder Frame besteht aus beliebig vielen nicht Nullbytes, und wird
durch ein (oder mehrere) Nullbytes terminiert.

** Daten
Die Ansteuerungswerte für die Servos werden als 10Bit Daten, verteilt
auf je zwei Bytes pro Servo in einem Frame übertragen.  Ein Frame hat
also immer eine gerade Anzahl von Bytes, gefolgt von einem Nullbyte.

Eine genauere Beschreibung findet sich in ~datenprotokoll.lisp~

* Software auf dem PC
** DONE Auslesen eines (oder mehrerer) Joysticks
** DONE enkodieren der Steuerungsdaten in die serielle Schnittstelle
** TODO Visualisierung der aktuellen Steuerungsdaten
** TODO Oberfläche zur Konfiguration der Joystickachsen
   Endpunkte, Totbereich, Achsenauswahl, Invertieren, Kurven
   
** Konfiguration eigener Fahrzeuge
Das Makro ~define-rc-model~ erlaubt, eigene Modellfahrzeuge mit
beliebig vielen Achsen zu definieren. Die Werte der Achsen werden
stets in der angegebenen Reihenfolge übertragen, und auf den
Ganzzahlen-Bereich, der durch die ~:min~ und ~:max~ Parameter für jede
Achse angegeben werden kann, skaliert. Mit dem ~:reverse~ Parameter
lässt sich die Rolle von ~:min~ und ~:max~ außerdem vertauschen. Diese
Bereichseinstellung sollte mit der verwendeten Empfängersoftware
harmonieren.

** Konfiguration eigener Joysticks
Das Makro ~define-joystick-binding~ wird verwendet, um die Achsen
eines Joysticks auf die Kanäle eines Modellfahrzeugs abzubilden. Das
Symbol für den Joystick sollte dabei im tatsächlichen Namen des
Joysticks vorkommen. Die Achsennummer wird mit dem Parameter ~:axis~
angegeben, und mit ~:reverse~ kann man die Achse bei Bedarf umkehren.
Die Reihenfolge der Achsen spielt keine Rolle, es müssen auch nicht
alle Achsen von jedem Joystick belegt werden--allerdings wird momentan
die gleichzeitige Nutzung mehrerer Joysticks noch nicht unterstützt.

** TODO Steuerbefehle mit Buttons und Hats
Bspp: Trimmung, Motor anlassen/ausschalten, Einziehfahrwerk

** TODO Trimmfunktion für Joystickachsen
Insbesondere bei Flugzeugen ist es nützlich, elektronisch die
Steuerflächen trimmen zu können, damit bei Nullstellung des Joysticks
das Flugzeug gerade fliegt und die Höhe beibehält.

*** TODO Trimmung persistent speichern
Die Trimmung sollte nach Möglichkeit persistent gespeichert werden
können, damit man nicht bei jedem Flug komplett neu trimmen muss.

*** TODO Trimmung durch Bewegung des Hats ändern

* Erforderliche Software

setserial + stty
sdl libraries
